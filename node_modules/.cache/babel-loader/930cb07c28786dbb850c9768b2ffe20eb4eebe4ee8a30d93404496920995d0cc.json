{"ast":null,"code":"var _jsxFileName = \"/Users/idane/Documents/CodeAcademy_Projects/Github Pack/flashcards-react-app/src/components/NewQuizForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\n// import selectors\nimport { selectTopics } from \"../features/topics/TopicsSlice\";\nimport { addQuiz } from \"../features/quizzes/QuizzesSlice\";\nimport { addCard } from \"../features/cards/CardsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewQuizForm() {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [topicId, setTopicId] = useState(\"\");\n  const navigate = useNavigate();\n  const topics = useSelector(selectTopics); // Replace with topics \n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    // if (name.length === 0) {\n    //   return;\n    // }\n\n    if (name.length === 0) {\n      alert('Please enter a quiz name.');\n      return;\n    }\n    if (cards.length === 0) {\n      alert('Please add at least one card.');\n      return;\n    }\n    for (let card of cards) {\n      if (card.front.trim() === '' || card.back.trim() === '') {\n        alert('Please fill in both sides of all cards.');\n        return;\n      }\n    }\n    const cardIds = [];\n\n    // create the new cards here and add each card's id to cardIds\n    // create the new quiz here\n    cards.forEach(card => {\n      const cardId = uuidv4();\n      cardIds.push(cardId);\n      // dispatch add card action\n      dispatch(addCard({\n        id: cardId,\n        front: card.front,\n        back: card.back\n      }));\n    });\n    const quizId = uuidv4();\n\n    // dispatch add quiz action \n    dispatch(addQuiz({\n      id: quizId,\n      name,\n      topicId,\n      cardIds\n    }));\n    navigate(ROUTES.quizzesRoute());\n  };\n  const addCardInputs = e => {\n    e.preventDefault();\n    setCards(cards.concat({\n      front: \"\",\n      back: \"\"\n    }));\n  };\n  const removeCard = (e, index) => {\n    e.preventDefault();\n    setCards(cards.filter((card, i) => index !== i));\n  };\n  const updateCardState = (index, side, value) => {\n    const newCards = cards.slice();\n    newCards[index][side] = value;\n    setCards(newCards);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a new quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"quiz-name\",\n        value: name,\n        onChange: e => setName(e.currentTarget.value),\n        placeholder: \"Quiz Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"quiz-topic\",\n        onChange: e => setTopicId(e.currentTarget.value),\n        placeholder: \"Topic\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Topic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), Object.values(topics).map(topic => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: topic.id,\n          children: topic.name\n        }, topic.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), cards.length > 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 30\n      }, this), cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-front-back\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: `card-front-${index}`,\n          value: cards[index].front,\n          onChange: e => updateCardState(index, \"front\", e.currentTarget.value),\n          placeholder: \"Front\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: `card-back-${index}`,\n          value: cards[index].back,\n          onChange: e => updateCardState(index, \"back\", e.currentTarget.value),\n          placeholder: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => removeCard(e, index),\n          className: \"remove-card-button\",\n          children: \"Remove Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addCardInputs,\n          children: \"Add a Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Create Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(NewQuizForm, \"m0vMFlwVka2q8yLxoiY9z9znCaU=\", false, function () {\n  return [useNavigate, useSelector, useDispatch];\n});\n_c = NewQuizForm;\nvar _c;\n$RefreshReg$(_c, \"NewQuizForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","useNavigate","v4","uuidv4","ROUTES","selectTopics","addQuiz","addCard","jsxDEV","_jsxDEV","NewQuizForm","_s","name","setName","cards","setCards","topicId","setTopicId","navigate","topics","dispatch","handleSubmit","e","preventDefault","length","alert","card","front","trim","back","cardIds","forEach","cardId","push","id","quizId","quizzesRoute","addCardInputs","concat","removeCard","index","filter","i","updateCardState","side","value","newCards","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","currentTarget","placeholder","Object","values","map","topic","className","onClick","type","_c","$RefreshReg$"],"sources":["/Users/idane/Documents/CodeAcademy_Projects/Github Pack/flashcards-react-app/src/components/NewQuizForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ROUTES from \"../app/routes\";\n// import selectors\nimport { selectTopics } from \"../features/topics/TopicsSlice\"\nimport { addQuiz } from \"../features/quizzes/QuizzesSlice\"\nimport { addCard } from \"../features/cards/CardsSlice\"\n\nexport default function NewQuizForm() {\n  const [name, setName] = useState(\"\");\n  const [cards, setCards] = useState([]);\n  const [topicId, setTopicId] = useState(\"\");\n  const navigate = useNavigate();\n  const topics = useSelector(selectTopics);  // Replace with topics \n  const dispatch = useDispatch();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // if (name.length === 0) {\n    //   return;\n    // }\n\n    if (name.length === 0) {\n      alert('Please enter a quiz name.');\n      return;\n    }\n  \n    if (cards.length === 0) {\n      alert('Please add at least one card.');\n      return;\n    }\n  \n    for (let card of cards) {\n      if (card.front.trim() === '' || card.back.trim() === '') {\n        alert('Please fill in both sides of all cards.');\n        return;\n      }\n    }\n\n    const cardIds = [];\n\n    // create the new cards here and add each card's id to cardIds\n    // create the new quiz here\n    cards.forEach((card) => {\n      const cardId = uuidv4()\n      cardIds.push(cardId)\n      // dispatch add card action\n      dispatch(addCard({ id: cardId, front: card.front, back: card.back}))\n    })\n\n    const quizId = uuidv4();\n\n    // dispatch add quiz action \n    dispatch(addQuiz({ id: quizId, name, topicId, cardIds }))\n    navigate(ROUTES.quizzesRoute())\n  };\n\n  const addCardInputs = (e) => {\n    e.preventDefault();\n    setCards(cards.concat({ front: \"\", back: \"\" }));\n  };\n\n  const removeCard = (e, index) => {\n    e.preventDefault();\n    setCards(cards.filter((card, i) => index !== i));\n  };\n\n  const updateCardState = (index, side, value) => {\n    const newCards = cards.slice();\n    newCards[index][side] = value;\n    setCards(newCards);\n  };\n\n  return (\n    <section>\n      <h1>Create a new quiz</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          id=\"quiz-name\"\n          value={name}\n          onChange={(e) => setName(e.currentTarget.value)}\n          placeholder=\"Quiz Title\"\n        />\n        <select\n          id=\"quiz-topic\"\n          onChange={(e) => setTopicId(e.currentTarget.value)}\n          placeholder=\"Topic\"\n        >\n          <option value=\"\">Topic</option>\n          {Object.values(topics).map((topic) => (\n            <option key={topic.id} value={topic.id}>\n              {topic.name}\n            </option>\n          ))}\n        </select>\n        \n        {cards.length > 0 && <h2>Cards</h2>}\n\n        {cards.map((card, index) => (\n          <div key={index} className=\"card-front-back\">\n            <input\n              id={`card-front-${index}`}\n              value={cards[index].front}\n              onChange={(e) =>\n                updateCardState(index, \"front\", e.currentTarget.value)\n              }\n              placeholder=\"Front\"\n            />\n\n            <input\n              id={`card-back-${index}`}\n              value={cards[index].back}\n              onChange={(e) =>\n                updateCardState(index, \"back\", e.currentTarget.value)\n              }\n              placeholder=\"Back\"\n            />\n\n            <button\n              onClick={(e) => removeCard(e, index)}\n              className=\"remove-card-button\"\n            >\n              Remove Card\n            </button>\n          </div>\n        ))}\n        <div className=\"actions-container\">\n          <button onClick={addCardInputs}>Add a Card</button>\n          <button type=\"submit\">Create Quiz</button>\n        </div>\n      </form>\n    </section>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}